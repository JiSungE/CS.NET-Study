강준구:

Q1. 구글링을 해보니 ArrayList는 조회를 많이 사용할 때 선택하고 LinkedList는 
      삽입/삭제가 빈번히 일어나는 상황에 선택한다고 하는데 이유가 뭔가요?

A1. ArrayList는 메모리상에서 연속적으로 붙어있기에 조회를 할 때 O(1)로서 좋기 때문에 
     조회를 할 때 많이 선택하고
     LinkedList는 기억 공간이 연속적으로 놓여 있지 않아도 노드만 연결해주면 삽입/삭제를
     해줄 수 있어서 삽입/삭제가 빈번히 일어날 때 많이 선택된다.

권성욱:

Q1. This와 Base의 키워드 차이를 모르겠습니다.

A1. This는 자기 자신을 지정하는 키워드이고 Base는 부모를 지정하는 키워드입니다.

송욱진:

Q1. 매개 변수가 있는 형식을 지원하는 기능을 C++에선 템플릿이라 하고
     C#에선 제네릭이란 이름으로 부르는데 차이점이 있나요?

A1. (답을 찾아봤는데 이해가 안되어서 교수님께 설명 부탁드립니다...)

김민석:
	 #region 정렬
        public LinkedList<Account> SortAcc(LinkedList<Account> List)
        {
            if (List.Count==1)return List;
            LinkedList<Account> List1 = new LinkedList<Account>();
            LinkedList<Account> List2 = new LinkedList<Account>();
            foreach(Account acc in List)
            {
                if (acc == List.First.Value || string.Compare(acc.Name, List.First.Value.Name)==1) List2.AddLast(acc);
                else if(string.Compare(acc.Name, List.First.Value.Name) == -1) List1.AddLast(acc);
            }
            List1 = SortAcc(List1);
            List2 = SortAcc(List2);
            foreach (Account acc in List2) List1.AddLast(acc);
            return List1;
        }
        #endregion

Q1. 위 코드에서 StackOverFlow가 발생되는 이유를 모르겠습니다...
 